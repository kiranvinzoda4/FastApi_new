"""init

Revision ID: f30a6a80befc
Revises: 
Create Date: 2025-10-25 18:33:49.953091

"""
from alembic import op
import sqlalchemy as sa
import app.data as data
from app.models import AdminUserModel
from app.libs.utils import generate_id
from app.libs.utils import create_password

# revision identifiers, used by Alembic.
revision = 'f30a6a80befc'
down_revision = None
branch_labels = None
depends_on = None

def seed():
    super_user = data.super_user
    db_user = AdminUserModel(
        id = generate_id(),
        first_name=super_user["first_name"],
        last_name=super_user["last_name"],
        email=super_user["email"],
        phone='+911234567890',
        otp='123456',
        password=create_password(super_user["password"]),
    )
    op.bulk_insert(AdminUserModel.__table__, [db_user.__dict__])


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Start explicit transaction
    connection = op.get_bind()
    trans = connection.begin()
    
    try:
        op.create_table('admin_users',
        sa.Column('first_name', sa.String(length=100), nullable=False),
        sa.Column('last_name', sa.String(length=100), nullable=False),
        sa.Column('email', sa.String(length=100), nullable=False),
        sa.Column('phone', sa.String(length=15), nullable=True),
        sa.Column('password', sa.String(length=255), nullable=False),
        sa.Column('otp', sa.String(length=6), nullable=True),
        sa.Column('id', sa.String(length=36), nullable=False),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('email')
        )
        op.create_table('api_logs',
        sa.Column('url', sa.Text(), nullable=False),
        sa.Column('method', sa.String(length=10), nullable=False),
        sa.Column('payload', sa.Text(), nullable=True),
        sa.Column('status_code', sa.Integer(), nullable=False),
        sa.Column('error_message', sa.Text(), nullable=True),
        sa.Column('user_id', sa.String(length=36), nullable=True),
        sa.Column('user_type', sa.String(length=30), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('id', sa.String(length=36), nullable=False),
        sa.PrimaryKeyConstraint('id')
        )
        op.create_table('countries',
        sa.Column('code', sa.String(length=10), nullable=False),
        sa.Column('id', sa.String(length=36), nullable=False),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('name', sa.String(length=100), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('code')
        )
        op.create_table('states',
        sa.Column('code', sa.String(length=10), nullable=False),
        sa.Column('country_id', sa.String(length=36), nullable=False),
        sa.Column('id', sa.String(length=36), nullable=False),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('name', sa.String(length=100), nullable=False),
        sa.ForeignKeyConstraint(['country_id'], ['countries.id'], ),
        sa.PrimaryKeyConstraint('id')
        )
        op.create_table('cities',
        sa.Column('state_id', sa.String(length=36), nullable=False),
        sa.Column('id', sa.String(length=36), nullable=False),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('name', sa.String(length=100), nullable=False),
        sa.ForeignKeyConstraint(['state_id'], ['states.id'], ),
        sa.PrimaryKeyConstraint('id')
        )
            # ### end Alembic commands ###
        
        seed()
        
        # Commit if all successful
        trans.commit()
        
    except Exception as e:
        # Rollback on any error
        trans.rollback()
        raise e


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Start explicit transaction
    connection = op.get_bind()
    trans = connection.begin()
    
    try:
        op.drop_table('cities')
        op.drop_table('states')
        op.drop_table('countries')
        op.drop_table('api_logs')
        op.drop_table('admin_users')
        
        # Commit if all successful
        trans.commit()
        
    except Exception as e:
        # Rollback on any error
        trans.rollback()
        raise e
    # ### end Alembic commands ###
